name: pytest-workflow
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  pull_request:
    branches: [dev]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'tags' output variable
      tags: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: "tests/config/tags.yml"
          token: ""

  test:
    name: ${{ matrix.tags }} ${{ matrix.profile }} NF ${{ matrix.NXF_VER }}
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.tags != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.changes.outputs.tags) }}"]
        profile: ["docker"]
        # profile: ["docker", "singularity", "conda"]
        TEST_DATA_BASE:
          - "test-datasets/data"
        NXF_VER:
          - "23.04.0"
          - "latest-everything"
        exclude:
          # - profile: "conda"
          #   tags: concatenate_vcfs
          # - profile: "conda"
          #   tags: deepvariant
          # - profile: "conda"
          #   tags: haplotypecaller
          # - profile: "conda"
          #   tags: merge
          # - profile: "conda"
          #   tags: snpeff
          # - profile: "conda"
          #   tags: umi
          # - profile: "conda"
          #   tags: validation_checks
          # - profile: "conda"
          #   tags: vep
          # - profile: "conda"
          #  tags: sentieon/bwamem
          - profile: "singularity"
            tags: concatenate_vcfs
          - profile: "singularity"
            tags: merge
          - profile: "singularity"
            tags: validation_checks
    env:
      NXF_ANSI_LOG: false
      TEST_DATA_BASE: "${{ github.workspace }}/test-datasets"
      SENTIEON_LICENSE_BASE64: ${{ secrets.SENTIEON_LICENSE_BASE64 }}
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v3

      - name: Hash Github Workspace
        id: hash_workspace
        run: |
          echo "digest=$(echo sarek3_${{ github.workspace }} | md5sum | cut -c 1-25)" >> $GITHUB_OUTPUT

      - name: Cache test data
        id: cache-testdata
        uses: actions/cache@v3
        with:
          path: test-datasets/
          key: ${{ steps.hash_workspace.outputs.digest }}

      - name: Check out test data
        if: steps.cache-testdata.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: nf-core/test-datasets
          ref: sarek3
          path: test-datasets/

      - name: Replace remote paths in samplesheets
        run: |
          for f in tests/csv/3.0/*csv; do
            sed -i "s=https://raw.githubusercontent.com/nf-core/test-datasets/modules/=${{ github.workspace }}/test-datasets/=g" $f
            echo "========== $f ============"
            cat $f
            echo "========================================"
          done;

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - uses: actions/cache@v3
        id: python-cache-setup
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python dependencies
        if: steps.python-cache-setup.outputs.cache-hit != 'true'
        run: python -m pip install --upgrade -r tests/requirements.txt

      - uses: actions/cache@v3
        id: nextflow-cache-setup
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}-nextflow-${{ matrix.NXF_VER }}

      - name: Install Nextflow ${{ matrix.NXF_VER }}
        if: steps.nextflow-cache-setup.outputs.cache-hit != 'true'
        uses: nf-core/setup-nextflow@v1.2.0
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      # Set up secrets
      - name: Set up nextflow secrets
        if: env.SENTIEON_LICENSE_BASE64 != null
        run: |
          nextflow secrets set SENTIEON_LICENSE_BASE64 ${{ secrets.SENTIEON_LICENSE_BASE64 }}
          nextflow secrets set SENTIEON_AUTH_MECH_BASE64 ${{ secrets.SENTIEON_AUTH_MECH_BASE64 }}
          SENTIEON_ENCRYPTION_KEY=$(echo -n "${{ secrets.ENCRYPTION_KEY_BASE64 }}" | base64 -d)
          SENTIEON_LICENSE_MESSAGE=$(echo -n "${{ secrets.LICENSE_MESSAGE_BASE64 }}" | base64 -d)
          SENTIEON_AUTH_DATA=$(python bin/license_message.py encrypt --key "$SENTIEON_ENCRYPTION_KEY" --message "$SENTIEON_LICENSE_MESSAGE")
          SENTIEON_AUTH_DATA_BASE64=$(echo -n "$SENTIEON_AUTH_DATA" | base64 -w 0)
          nextflow secrets set SENTIEON_AUTH_DATA_BASE64 $SENTIEON_AUTH_DATA_BASE64

      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a

      - name: Run pytest-workflow
        uses: Wandalen/wretry.action@v1.0.11
        with:
          command: TMPDIR=~ PROFILE=${{ matrix.profile }} pytest --tag ${{ matrix.tags }} --symlink --kwdof --git-aware --color=yes
          attempt_limit: 3

      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always /home/runner/pytest_workflow_*/*/log.{out,err}

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.profile }}
          path: |
            /home/runner/pytest_workflow_*/*/.nextflow.log
            /home/runner/pytest_workflow_*/*/log.out
            /home/runner/pytest_workflow_*/*/log.err
            /home/runner/pytest_workflow_*/*/work
            !/home/runner/pytest_workflow_*/*/work/conda
            !/home/runner/pytest_workflow_*/*/work/singularity
